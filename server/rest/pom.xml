<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-server-parent</artifactId>
      <version>8.5.0-redhat-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
   </parent>

   <artifactId>infinispan-server-rest</artifactId>
   <packaging>war</packaging>
   <name>Infinispan REST Server</name>
   <description>REST interface for Infinispan, packaged as a WAR file for deployment in a servlet container
   </description>

   <properties>
      <certificate.dname>CN=HotRod_1,OU=Infinispan,O=JBoss,L=Red Hat,ST=World,C=WW</certificate.dname>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxrs</artifactId>
      </dependency>

      <dependency>
         <groupId>org.codehaus.jackson</groupId>
         <artifactId>jackson-mapper-asl</artifactId>
      </dependency>

      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
      </dependency>


      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>infinispan-server-core</artifactId>
      </dependency>

      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>commons-httpclient</groupId>
         <artifactId>commons-httpclient</artifactId>
         <scope>test</scope>
      </dependency>

      <!-- It is very likely that we will replace Jetty with Netty for unifying
           HTTP/1.1 and HTTP/2 testsuide -->
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-client</artifactId>
         <version>9.4.3.v20170317</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.assertj</groupId>
         <artifactId>assertj-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.openjdk.jmh</groupId>
         <artifactId>jmh-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.openjdk.jmh</groupId>
         <artifactId>jmh-generator-annprocess</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
          <plugin>
              <artifactId>maven-war-plugin</artifactId>
              <configuration>
                  <attachClasses>true</attachClasses>
              </configuration>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <dependencies>
                  <dependency>
                      <groupId>com.sun</groupId>
                      <artifactId>tools</artifactId>
                      <version>${java.version}</version>
                      <scope>system</scope>
                      <systemPath>${java.home}/../lib/tools.jar</systemPath>
                  </dependency>
              </dependencies>
              <executions>
                  <execution>
                      <id>create-certificates</id>
                      <phase>process-test-resources</phase>
                      <goals>
                          <goal>run</goal>
                      </goals>
                      <configuration>
                          <target>
                              <macrodef name="keytool">
                                  <attribute name="command"/>
                                  <element name="args"/>
                                  <sequential>
                                      <condition property="keytool.classname" value="com.ibm.crypto.tools.KeyTool">
                                          <available classname="com.ibm.crypto.tools.KeyTool"/>
                                      </condition>
                                      <condition property="keytool.classname" value="sun.security.tools.keytool.Main">
                                          <available classname="sun.security.tools.keytool.Main"/>
                                      </condition>
                                      <java classname="${keytool.classname}" failonerror="true">
                                          <arg value="@{command}"/>
                                          <!-- common arguments -->
                                          <arg value="-validity"/>
                                          <arg value="365"/>
                                          <arg value="-keyalg"/>
                                          <arg value="RSA"/>
                                          <arg value="-keysize"/>
                                          <arg value="2048"/>
                                          <arg value="-noprompt"/>
                                          <arg value="-storepass"/>
                                          <arg value="secret"/>
                                          <arg value="-keypass"/>
                                          <arg value="secret"/>
                                          <!-- additional arguments -->
                                          <args/>
                                      </java>
                                  </sequential>
                              </macrodef>
                              <delete quiet="true">
                                  <fileset dir="${project.build.testOutputDirectory}" includes="*.jks,*.csr,*.cer"/>
                              </delete>
                              <echo message="Generate the CA certificate"/>
                              <keytool command="-genkeypair">
                                  <args>
                                      <arg value="-alias"/>
                                      <arg value="default"/>
                                      <arg value="-dname"/>
                                      <arg value="${certificate.dname}"/>
                                      <arg value="-keystore"/>
                                      <arg value="${project.build.testOutputDirectory}/default_server_keystore.jks"/>
                                  </args>
                              </keytool>
                              <keytool command="-importkeystore">
                                  <args>
                                      <arg value="-srckeystore"/>
                                      <arg value="${project.build.testOutputDirectory}/default_server_keystore.jks"/>
                                      <arg value="-srcstorepass"/>
                                      <arg value="secret"/>
                                      <arg value="-destkeystore"/>
                                      <arg value="${project.build.testOutputDirectory}/default_client_truststore.jks"/>
                                      <arg value="-deststorepass"/>
                                      <arg value="secret"/>
                                  </args>
                              </keytool>
                          </target>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
      </plugins>
   </build>
</project>
