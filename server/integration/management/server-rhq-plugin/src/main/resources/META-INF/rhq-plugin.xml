<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plugin [
   <!ENTITY pluginName 'JDG7Server'>
]>

<plugin name="&pluginName;" displayName="JBoss Data Grid Server 7"
        description="Supports management and monitoring of JBoss Data Grid Server 7"
        package="org.rhq.modules.plugins.wildfly10"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration">

    <depends plugin="EAP7" useClasses="true"/>

    <service name="Infinispan Server" discovery="SubsystemDiscovery"
             class="BaseComponent" singleton="true"
             description="The Infinispan Server endpoint connectors">

        <runs-inside>
            <parent-resource-type name="Profile" plugin="EAP7"/>
            <parent-resource-type name="EAP7 Standalone Server" plugin="EAP7"/>
            <parent-resource-type name="Managed Server" plugin="EAP7"/>
        </runs-inside>

        <plugin-configuration>
            <c:simple-property name="path" readOnly="true" default="subsystem=datagrid-infinispan-endpoint"/>
            <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
        </plugin-configuration>

        <operation name="ignore-cache-all-endpoints" description="Ignore cache on all endpoints">
            <parameters>
                <c:simple-property name="cache-names" required="true" type="string" readOnly="false" description="Cache names to ignore"/>
            </parameters>
            <results>
                <c:simple-property name="operationResult" description="Ignore cache on all endpoints" />
            </results>
        </operation>

        <operation name="is-ignored-all-endpoints" description="Check if caches are being ignored by all endpoints">
            <parameters>
                <c:simple-property name="cache-names" required="true" type="string" readOnly="false" description="Cache names"/>
            </parameters>
            <results>
                <c:simple-property name="operationResult" description="Check if caches are being ignored by all endpoints" />
            </results>
        </operation>

        <operation name="unignore-cache-all-endpoints" description="Unignore cache on all endpoints">
            <parameters>
                <c:simple-property name="cache-names" required="true" type="string" readOnly="false" description="Cache names to unignore"/>
            </parameters>
            <results>
                <c:simple-property name="operationResult" description="Unignore cache on all endpoints" />
            </results>
        </operation>

        <service name="Hotrod Connector" discovery="SubsystemDiscovery"
                 class="BaseComponent" createDeletePolicy="both"
                 creationDataType="configuration">

            <plugin-configuration>
                <c:simple-property name="path" readOnly="true" default="hotrod-connector"/>
            </plugin-configuration>

            <metric property="bytesRead" description="Returns the number of bytes read from this Memcached connector"/>
            <metric property="bytesWritten" description="Returns the number of bytes written to this Memcached connector"/>

            <resource-configuration>
                <c:simple-property name="cache-container" required="true" type="string" readOnly="false" description="The cache container to use"/>
                <c:simple-property name="idle-timeout" required="false" type="string" readOnly="false" description="The timeout for idle connections"/>
                <c:list-property name="ignored-caches" required="false" description="List of caches ignored for this connector" >
                    <c:simple-property name="ignored-caches" />
                </c:list-property>
                <c:simple-property name="name" required="false" type="string" readOnly="false" description="The name to give to this connector"/>
                <c:simple-property name="receive-buffer-size" required="false" type="string" readOnly="false" description="Size of the receive buffer"/>
                <c:simple-property name="send-buffer-size" required="false" type="string" readOnly="false" description="Size of the send buffer"/>
                <c:simple-property name="socket-binding" required="true" type="string" readOnly="false" description="The socket binding to use for this connector"/>
                <c:simple-property name="tcp-nodelay" required="false" type="boolean" readOnly="false" defaultValue="true"
                                   description="Whether to use TCP NO_DELAY. The default value is true."/>
                <c:simple-property name="worker-threads" required="false" type="string" readOnly="false" description="The number of worker threads to use for this connector"/>
            </resource-configuration>

            <service name="Authentication"
                     discovery="SubsystemDiscovery"
                     class="BaseComponent" singleton="true">

                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="authentication=AUTHENTICATION"/>
                </plugin-configuration>

                <resource-configuration>
                    <c:simple-property name="security-realm" required="false" type="string" readOnly="false" description="The security realm which should be used for this connector"/>
                </resource-configuration>

                <service name="SASL"
                         discovery="SubsystemDiscovery"
                         class="BaseComponent" singleton="true">

                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="sasl=SASL"/>
                    </plugin-configuration>

                    <resource-configuration>
                        <c:list-property name="mechanisms" required="true" description="Lists the SASL mechanisms supported by this connector" >
                            <c:simple-property name="mechanisms" />
                        </c:list-property>
                        <c:list-property name="qop" required="false" description="TList of quality&#45;of&#45;protection values, in decreasing order of preference. Can be auth (authentication only), auth&#45;int (authentication plus integrity) and auth&#45;conf (authentication, integrity and confidentiality)" >
                            <c:simple-property name="qop" />
                        </c:list-property>
                        <c:simple-property name="server-context-name" required="false" type="string" readOnly="false" description="The name of the login context used to generate the server subject for the SASL server"/>
                        <c:simple-property name="server-name" required="false" type="string" readOnly="false" description="The name the server which is exposed to clients"/>
                        <c:list-property name="strength" required="false" description="The optional nested &apos;strength&apos; element contains a list of cipher strength values, in decreasing order of preference." >
                            <c:simple-property name="strength" />
                        </c:list-property>
                    </resource-configuration>

                    <service name="SASL Property"
                             discovery="SubsystemDiscovery"
                             class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="property"/>
                        </plugin-configuration>

                        <resource-configuration>
                            <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the SASL configuration property"/>
                        </resource-configuration>
                    </service><!-- End of property service -->

                    <service name="SASL Policy"
                             discovery="SubsystemDiscovery"
                             class="BaseComponent"
                             singleton="true">

                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="sasl-policy=SASL_POLICY"/>
                        </plugin-configuration>

                        <resource-configuration>
                            <c:simple-property name="forward-secrecy" required="false" type="boolean" readOnly="false" defaultValue="true" description="The optional nested &apos;forward&#45;secrecy&apos; element contains a boolean value which specifies whether mechanisms that implement forward secrecy between sessions are required. Forward secrecy means that breaking into one session will not automatically provide information for breaking into future sessions. The default value is true."/>
                            <c:simple-property name="no-active" required="false" type="boolean" readOnly="false" defaultValue="true" description="The optional nested &apos;no&#45;active&apos; element contains a boolean value which specifies whether mechanisms susceptible to active (non&#45;dictionary) attacks are not permitted. &apos;false&apos; to permit, &apos;true&apos; to deny. The default value is true."/>
                            <c:simple-property name="no-anonymous" required="false" type="boolean" readOnly="false" defaultValue="true" description="The optional nested &apos;no&#45;anonymous&apos; element contains a boolean value which specifies whether mechanisms that accept anonymous login are permitted.  &apos;false&apos; to permit, &apos;true&apos; to deny. The default value is true."/>
                            <c:simple-property name="no-dictionary" required="false" type="boolean" readOnly="false" defaultValue="true" description="The optional nested &apos;no&#45;dictionary&apos; element contains a boolean value which specifies whether mechanisms susceptible to passive dictionary attacks are permitted.  &apos;false&apos; to permit, &apos;true&apos; to deny. The default value is true."/>
                            <c:simple-property name="no-plain-text" required="false" type="boolean" readOnly="false" defaultValue="true" description="The optional nested &apos;no&#45;plain&#45;text&apos; element contains a boolean value which specifies whether mechanisms susceptible to simple plain passive attacks (e.g., &apos;PLAIN&apos;) are not permitted.    &apos;false&apos; to permit, &apos;true&apos; to deny. The default value is true."/>
                            <c:simple-property name="pass-credentials" required="false" type="boolean" readOnly="false" defaultValue="true"
                                               description="The optional nested &apos;pass&#45;credentials&apos; element contains a boolean value which specifies whether mechanisms that pass client credentials are required. The default value is true."/>
                        </resource-configuration>
                    </service>
                </service>
            </service><!-- End of authentication service -->

            <service name="Encryption"
                     discovery="SubsystemDiscovery"
                     class="BaseComponent"
                     singleton="true">

                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="encryption=ENCRYPTION"/>
                </plugin-configuration>

                <resource-configuration>
                    <c:simple-property name="require-ssl-client-auth" required="false" type="boolean" readOnly="false" defaultValue="false"
                                       description="Enables client certificate authentication for SSL connections. The default value is false."/>
                    <c:simple-property name="security-realm" required="false" type="string" readOnly="false" description="The security realm which should be used for this connector"/>
                </resource-configuration>

            </service>

            <service name="Topology State Transfer" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="topology-state-transfer=TOPOLOGY_STATE_TRANSFER"/>
                </plugin-configuration>

                <resource-configuration>
                    <c:simple-property name="await-initial-retrieval" required="false" type="boolean" readOnly="false" defaultValue="false" description="Wait for initial state transfer to happen on startup. The default value is false."/>
                    <c:simple-property name="external-host" required="false" type="string" readOnly="false" description="External host"/>
                    <c:simple-property name="external-port" required="false" type="string" readOnly="false" description="External port"/>
                    <c:simple-property name="lazy-retrieval" required="false" type="boolean" readOnly="false" defaultValue="false" description="Lazy retrieval. The default value is false."/>
                    <c:simple-property name="lock-timeout" required="false" type="string" readOnly="false" description="Lock timeout"/>
                    <c:simple-property name="replication-timeout" required="false" type="string" readOnly="false" description="Replication timeout"/>
                </resource-configuration>
            </service>
        </service>

        <service name="Memcached Connector"
                 discovery="SubsystemDiscovery"
                 class="BaseComponent">

            <plugin-configuration>
                <c:simple-property name="path" readOnly="true" default="memcached-connector"/>
            </plugin-configuration>

            <metric property="bytesRead" description="Returns the number of bytes read from this Memcached connector"/>
            <metric property="bytesWritten" description="Returns the number of bytes written to this Memcached connector"/>

            <resource-configuration>
                <c:simple-property name="cache" required="false" type="string" readOnly="false" defaultValue="memcachedCache"
                                   description="The cache to use. The default value is memcachedCache."/>
                <c:simple-property name="cache-container" required="true" type="string" readOnly="false" description="The cache container to use"/>
                <c:simple-property name="idle-timeout" required="false" type="string" readOnly="false" description="The timeout for idle connections"/>
                <c:list-property name="ignored-caches" required="false" description="List of caches ignored for this connector" >
                    <c:simple-property name="ignored-caches" />
                </c:list-property>
                <c:simple-property name="name" required="false" type="string" readOnly="false" description="The name to give to this connector"/>
                <c:simple-property name="receive-buffer-size" required="false" type="string" readOnly="false" description="Size of the receive buffer"/>
                <c:simple-property name="send-buffer-size" required="false" type="string" readOnly="false" description="Size of the send buffer"/>
                <c:simple-property name="socket-binding" required="true" type="string" readOnly="false" description="The socket binding to use for this connector"/>
                <c:simple-property name="tcp-nodelay" required="false" type="boolean" readOnly="false" defaultValue="true"
                                   description="Whether to use TCP NO_DELAY. The default value is true."/>
                <c:simple-property name="worker-threads" required="false" type="string" readOnly="false" description="The number of worker threads to use for this connector"/>
            </resource-configuration>
        </service><!-- End of memcached-connector service -->

        <service name="Rest Connector"
                 discovery="SubsystemDiscovery"
                 class="BaseComponent">

            <plugin-configuration>
                <c:simple-property name="path" readOnly="true" default="rest-connector"/>
            </plugin-configuration>

            <resource-configuration>
                <c:simple-property name="auth-method" required="false" type="string" readOnly="false" description="The authentication method to apply to the REST connector (BASIC, DIGEST, CLIENT&#45;CERT)"/>
                <c:simple-property name="cache-container" required="true" type="string" readOnly="false" description="The cache container to use"/>
                <c:simple-property name="context-path" required="false" type="string" readOnly="false" description="The context path on which the REST connector should be published"/>
                <c:simple-property name="extended-headers" required="false" type="string" readOnly="false" defaultValue="ON_DEMAND"
                                   description="Allow retrieval of extendend information about entries (NEVER, ON_DEMAND). The default value is ON_DEMAND.">
                    <c:property-options>
                        <c:option value="NEVER" name="Never return extended information headers" />
                        <c:option value="ON_DEMAND" name="Return extended information headers on-demand" />
                    </c:property-options>
                </c:simple-property>
                <c:list-property name="ignored-caches" required="false" description="List of caches ignored for this connector" >
                    <c:simple-property name="ignored-caches" />
                </c:list-property>
                <c:simple-property name="name" required="false" type="string" readOnly="false" description="The name to give to this connector"/>
                <c:simple-property name="security-domain" required="false" type="string" readOnly="false" description="The security domain to apply to the REST connector"/>
                <c:simple-property name="security-mode" required="false" type="string" readOnly="false" defaultValue="READ_WRITE"
                                   description="Whether to authenticate only writes (WRITE) or all access (READ_WRITE). The default value is READ_WRITE.">
                    <c:property-options>
                        <c:option value="READ_WRITE" name="Require authentication for both read and write operations" />
                        <c:option value="WRITE" name="Require authentication only for write operations" />
                    </c:property-options>
                </c:simple-property>
                <c:simple-property name="socket-binding" required="true" type="string" readOnly="false" description="The socket binding to use for this connector"/>
                <c:simple-property name="virtual-host" required="false" type="string" readOnly="false" description="The virtual host on which the REST connector should be published"/>
                <c:simple-property name="virtual-server" required="false" type="string" readOnly="false" description="The virtual server on which the REST connector should be published"/>
            </resource-configuration>

        </service><!-- End of rest-connector service -->
    </service>

    <service name="Infinispan" discovery="SubsystemDiscovery"
             class="BaseComponent" singleton="true" description="The Infinispan subsystem">

        <runs-inside>
            <parent-resource-type name="Profile" plugin="EAP7"/>
            <parent-resource-type name="EAP7 Standalone Server" plugin="EAP7"/>
            <parent-resource-type name="Managed Server" plugin="EAP7"/>
        </runs-inside>

        <plugin-configuration>
            <c:simple-property name="path" readOnly="true" default="subsystem=datagrid-infinispan"/>
            <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
        </plugin-configuration>

        <service name="Cache Container" discovery="SubsystemDiscovery"
                 class="org.infinispan.server.rhq.CacheContainerComponent" description="A cache container">

            <plugin-configuration>
                <c:simple-property name="path" readOnly="true" default="cache-container"/>
            </plugin-configuration>

            <operation name="add-alias" description="Add an alias for this cache container">
                <parameters>
                    <c:simple-property name="name" required="false" type="string" readOnly="false"
                                       description="The name of the cache."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Add an alias for this cache container"/>
                </results>
            </operation>
            <operation name="bring-site-online" description="Brings a backup site online on all caches.">
                <parameters>
                    <c:simple-property name="site-name" required="true" type="string" readOnly="false"
                                       description="The site name."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Brings a backup site online on all caches."/>
                </results>
            </operation>
            <operation name="cancel-push-state"
                       description="Cancels a current pushing state to backup site on all caches.">
                <parameters>
                    <c:simple-property name="site-name" required="true" type="string" readOnly="false"
                                       description="The site name."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult"
                                       description="Cancels a current pushing state to backup site on all caches."/>
                </results>
            </operation>
            <operation name="cli-interpreter" description="CLI interpreter">
                <results>
                    <c:simple-property name="operationResult" description="CLI interpreter"/>
                </results>
            </operation>
            <operation name="cluster-rebalance"
                       description="Configures whether rebalancing is enabled/disabled for the cluster.">
                <parameters>
                    <c:simple-property name="value" required="true" type="boolean" readOnly="false" defaultValue="true"
                                       description="True to enable cluster rebalance (default), false to disable it. The default value is true."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult"
                                       description="Configures whether rebalancing is enabled/disabled for the cluster."/>
                </results>
            </operation>
            <operation name="get-proto-schema" description="Get the contents of a Protobuf schema">
                <parameters>
                    <c:simple-property name="file-name" required="true" type="string" readOnly="false"
                                       description="The file name"/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Get the contents of a Protobuf schema"/>
                </results>
            </operation>
            <operation name="get-proto-schema-names" description="Get the names of the available Protobuf schemas">
                <results>
                    <c:simple-property name="operationResult"
                                       description="Get the names of the available Protobuf schemas"/>
                </results>
            </operation>
            <operation name="push-state" description="Pushes state to backup site of all caches.">
                <parameters>
                    <c:simple-property name="site-name" required="true" type="string" readOnly="false"
                                       description="The site name."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Pushes state to backup site of all caches."/>
                </results>
            </operation>
            <operation name="read-event-log" description="Returns a set of event logs">
                <parameters>
                    <c:simple-property name="lines" required="false" type="string" readOnly="false"
                                       defaultValue="10"
                                       description="The number of events to return. The default value is 10."/>
                    <c:simple-property name="since" required="false" type="string" readOnly="false"
                                       description="The instant in ISO-8601 format from which events should be returned"/>
                    <c:simple-property name="category" required="false" type="string" readOnly="false"
                                       description="The category of the events"/>
                    <c:simple-property name="level" required="false" type="string" readOnly="false"
                                       description="The level of the events"/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" required="false" type="string" readOnly="false"/>
                </results>
            </operation>
            <operation name="register-proto-schemas" description="Registers one or more Protobuf schemas">
                <parameters>
                    <c:simple-property name="file-names" required="true" type="string" readOnly="false"
                                       description="Unique file names"/>
                    <c:simple-property name="file-contents" required="true" type="string" readOnly="false"
                                       description="The contents of the Protobuf files corresponding to the provided names"/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Registers one or more Protobuf schemas"/>
                </results>
            </operation>
            <operation name="remove" description="Remove a cache container from the infinispan subsystem">
                <results>
                    <c:simple-property name="operationResult"
                                       description="Remove a cache container from the infinispan subsystem"/>
                </results>
            </operation>
            <operation name="remove-alias" description="Remove an alias for this cache container">
                <parameters>
                    <c:simple-property name="name" required="false" type="string" readOnly="false"
                                       description="The name of the cache."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Remove an alias for this cache container"/>
                </results>
            </operation>
            <operation name="script-add" description="Registers a named script.">
                <parameters>
                    <c:simple-property name="name" required="true" type="string" readOnly="false"
                                       description="The name of the cache."/>
                    <c:simple-property name="code" required="true" type="string" readOnly="false"
                                       description="The script's code."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Registers a named script."/>
                </results>
            </operation>
            <operation name="script-cat" description="Shows a script's code">
                <parameters>
                    <c:simple-property name="name" required="true" type="string" readOnly="false"
                                       description="The name of the cache."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" required="false" type="string" readOnly="false"/>
                </results>
            </operation>
            <operation name="script-remove" description="Removes a script.">
                <parameters>
                    <c:simple-property name="name" required="true" type="string" readOnly="false"
                                       description="The name of the cache."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Removes a script."/>
                </results>
            </operation>
            <operation name="take-site-offline" description="Takes a backup site offline on all caches.">
                <parameters>
                    <c:simple-property name="site-name" required="true" type="string" readOnly="false"
                                       description="The site name."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Takes a backup site offline on all caches."/>
                </results>
            </operation>
            <operation name="task-execute" description="Executes a task.">
                <parameters>
                    <c:simple-property name="name" required="true" type="string" readOnly="false"
                                       description="The name of the cache."/>
                    <c:simple-property name="cache-name" required="false" type="string" readOnly="false"
                                       description="The name of this cache"/>
                    <c:simple-property name="parameters" required="false" type="string" readOnly="false"
                                       description="Named parameters to pass to the task."/>
                    <c:simple-property name="async" required="false" type="boolean" readOnly="false"
                                       defaultValue="false"
                                       description="Executes the task asynchronously. The default value is false."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" required="false" type="string" readOnly="false"/>
                </results>
            </operation>
            <operation name="task-list" description="Lists the available tasks in this cache container.">
                <results>
                    <c:simple-property name="operationResult" required="false" type="string" readOnly="false"/>
                </results>
            </operation>
            <operation name="task-status" description="Lists the available tasks in this cache container.">
                <results>
                    <c:simple-property name="operationResult" required="false" type="string" readOnly="false"/>
                </results>
            </operation>
            <operation name="unregister-proto-schemas" description="Unregisters one or more Protobuf schemas">
                <parameters>
                    <c:simple-property name="file-names" required="true" type="string" readOnly="false"
                                       description="Unique file names"/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Unregisters one or more Protobuf schemas"/>
                </results>
            </operation>
            <operation name="upload-proto-schemas"
                       description="Registers one or more Protobuf schemas given the URLs, which should be reachable by the server">
                <parameters>
                    <c:simple-property name="file-names" required="true" type="string" readOnly="false"
                                       description="Unique file names"/>
                    <c:simple-property name="file-urls" required="true" type="string" readOnly="false"
                                       description="The URLs for the schemas"/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult"
                                       description="Registers one or more Protobuf schemas given the URLs, which should be reachable by the server"/>
                </results>
            </operation>

            <metric property="average-read-time" description="Average time (in ms) for cache reads. Includes hits and misses. May return null if the cache is not started."/>
            <metric property="average-remove-time" description="Average time (in ms) for a cache removal. Includes hits and misses. May return null if the cache is not started."/>
            <metric property="average-write-time" description="Average time (in ms) for cache writes. May return null if the cache is not started."/>
            <metric property="cache-manager-status" dataType="trait" description="The status of the cache manager component. May return null if the cache manager is not started."/>
            <metric property="cluster-availability" dataType="trait" description="The availability mode of the cluster."/>
            <metric property="cluster-name" dataType="trait" description="The name of the cluster this node belongs to. May return null if the cache manager is not started."/>
            <metric property="cluster-size" description="How many nodes are part of this cluster."/>
            <metric property="coordinator-address" dataType="trait" description="The logical address of the cluster&apos;s coordinator. May return null if the cache manager is not started."/>
            <metric property="created-cache-count" description="The number of created caches configured for this container."/>
            <metric property="defined-cache-count" description="The number of defined caches configured for this container."/>
            <metric property="defined-cache-names" description="The defined caches configured for this container."/>
            <metric property="evictions" description="The number of cache eviction operations. May return null if the cache is not started."/>
            <metric property="hit-ratio" description="The hit/miss ratio for the cache (hits/hits&#43;misses). May return null if the cache is not started."/>
            <metric property="hits" description="The number of cache attribute hits. May return null if the cache is not started."/>
            <metric property="is-coordinator" description="Set to true if this node is the cluster&apos;s coordinator. May return null if the cache manager is not started."/>
            <metric property="local-address" dataType="trait" description="The local address of the node. May return null if the cache manager is not started."/>
            <metric property="members" description="The members of the cluster that this manager is a part of."/>
            <metric property="misses" description="The number of cache attribute misses. May return null if the cache is not started."/>
            <metric property="number-of-entries" description="The current number of entries in the cache. May return null if the cache is not started."/>
            <metric property="read-write-ratio" description="The read/write ratio of the cache ((hits&#43;misses)/stores). May return null if the cache is not started."/>
            <metric property="remove-hits" description="The number of cache attribute remove hits. May return null if the cache is not started."/>
            <metric property="remove-misses" description="The number of cache attribute remove misses. May return null if the cache is not started."/>
            <metric property="running-cache-count" description="The number of currently running caches in this container."/>
            <metric property="sites-mixed" description="List of site which are online and offline."/>
            <metric property="sites-offline" description="List of sites which are offline."/>
            <metric property="sites-online" description="List of sites which are online."/>
            <metric property="stores" description="The number of cache attribute put operations. May return null if the cache is not started."/>
            <metric property="time-since-reset" description="Time (in secs) since cache statistics were reset. May return null if the cache is not started."/>
            <metric property="time-since-start" description="Time (in secs) since cache started. May return null if the cache is not started."/>

            <resource-configuration>
                <c:simple-property name="default-cache" required="false" type="string" readOnly="true"
                                   description="The default infinispan cache"/>
            </resource-configuration>

            <service name="Cache" discovery="SubsystemDiscovery"
                     class="org.infinispan.server.rhq.CacheComponent"
                     description="The caches within a cache container" createDeletePolicy="both"
                     creationDataType="configuration">

                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true"
                                       default="distributed-cache|local-cache|invalidation-cache|replicated-cache"/>
                </plugin-configuration>

                <operation name="cache-rebalance" description="The cache rebalancing behavior.">
                    <parameters>
                        <c:simple-property name="value" required="true" type="boolean" readOnly="false"
                                           defaultValue="true"
                                           description="True to enable rebalance for this cache (default), false otherwise. The default value is true."/>
                    </parameters>
                    <results>
                        <c:simple-property name="operationResult" description="The cache rebalancing behavior."/>
                    </results>
                </operation>
                <operation name="clear-cache" description="Clears the cache contents.">
                    <results>
                        <c:simple-property name="operationResult" description="Clears the cache contents."/>
                    </results>
                </operation>
                <operation name="disconnect-source"
                           description="Disconnects the target cluster from the source cluster according to the specified migrator.">
                    <parameters>
                        <c:simple-property name="migrator-name" required="false" type="string" readOnly="false"
                                           description="The migrator to disconnect from."/>
                    </parameters>
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Disconnects the target cluster from the source cluster according to the specified migrator."/>
                    </results>
                </operation>
                <operation name="flush-cache" description="Flushes the cache contents.">
                    <results>
                        <c:simple-property name="operationResult" description="Flushes the cache contents."/>
                    </results>
                </operation>
                <operation name="mass-reindex" description="Initiates a mass reindex of the entries in the cache">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Initiates a mass reindex of the entries in the cache"/>
                    </results>
                </operation>
                <operation name="record-known-global-keyset"
                           description="Dumps the global known keyset to a well-known key for retrieval by the upgrade process.">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Dumps the global known keyset to a well-known key for retrieval by the upgrade process."/>
                    </results>
                </operation>
                <operation name="reset-activation-statistics" description="Resets the cache activation statistics.">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Resets the cache activation statistics."/>
                    </results>
                </operation>
                <operation name="reset-invalidation-statistics" description="Resets the cache invalidation statistics.">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Resets the cache invalidation statistics."/>
                    </results>
                </operation>
                <operation name="reset-passivation-statistics" description="Resets the cache passivation statistics.">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Resets the cache passivation statistics."/>
                    </results>
                </operation>
                <operation name="reset-rpc-manager-statistics" description="Resets the cache's rpc manager statistics.">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Resets the cache's rpc manager statistics."/>
                    </results>
                </operation>
                <operation name="reset-statistics" description="Resets statistics gathered by this cache.">
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Resets statistics gathered by this cache."/>
                    </results>
                </operation>
                <operation name="shutdown-cache" description="Cluster-wide shutdown of the cache.">
                    <results>
                        <c:simple-property name="operationResult" description="Cluster-wide shutdown of the cache."/>
                    </results>
                </operation>
                <operation name="start-cache" description="Starts the cache.">
                    <results>
                        <c:simple-property name="operationResult" description="Starts the cache."/>
                    </results>
                </operation>
                <operation name="stop-cache" description="Stops the cache.">
                    <results>
                        <c:simple-property name="operationResult" description="Stops the cache."/>
                    </results>
                </operation>
                <operation name="synchronize-data"
                           description="Synchronizes data from the old cluster to this using the specified migrator.">
                    <parameters>
                        <c:simple-property name="migrator-name" required="false" type="string" readOnly="false"
                                           description="The migrator to synchronize to."/>
                        <c:simple-property name="read-batch" required="false" type="integer" readOnly="false"
                                           defaultValue="1000"
                                           description="The number of entries transferred at a time from the old cluster. The default value is 1000."/>
                        <c:simple-property name="write-threads" required="false" type="integer" readOnly="false"
                                           defaultValue="8"
                                           description="The number of threads to write data to the new cluster, in each node. The default value is 8."/>
                    </parameters>
                    <results>
                        <c:simple-property name="operationResult"
                                           description="Synchronizes data from the old cluster to this using the specified migrator."/>
                    </results>
                </operation>

                <metric property="activations" dataType="trait" description="The number of cache node activations (bringing a node into memory from a cache store) . May return null if the cache is not started."/>
                <metric property="average-read-time" description="Average time (in ms) for cache reads. Includes hits and misses. May return null if the cache is not started."/>
                <metric property="average-remove-time" description="Average time (in ms) for a cache removal. Includes hits and misses. May return null if the cache is not started."/>
                <metric property="average-replication-time" description="The average time spent in the transport layer, in milliseconds"/>
                <metric property="average-write-time" description="Average time (in ms) for cache writes. May return null if the cache is not started."/>
                <metric property="cache-loader-loads" description="The number of cache loader node loads. May return null if the cache is not started."/>
                <metric property="cache-loader-misses" description="The number of cache loader node misses. May return null if the cache is not started."/>
                <metric property="cache-loader-stores" description="The number of cache loader node stores. May return null if the cache is not started."/>
                <metric property="cache-name" dataType="trait" description="The name of this cache"/>
                <metric property="cache-status" dataType="trait" description="The status of the cache component. May return null if the cache is not started."/>
                <metric property="clusterwide-activations" dataType="trait" description="The clusterwide number of cache invalidations. May return null if the cache is not started."/>
                <metric property="clusterwide-average-read-time" description="Clusterwide average time (in ms) for cache reads. Includes hits and misses. May return null if the cache is not started."/>
                <metric property="clusterwide-average-remove-time" description="Clusterwide average time (in ms) for a cache removal. Includes hits and misses. May return null if the cache is not started."/>
                <metric property="clusterwide-average-write-time" description="Clusterwide average time (in ms) for cache writes. May return null if the cache is not started."/>
                <metric property="clusterwide-cache-loader-loads" description="The clusterwide number of cache loader load operations. May return null if the cache is not started."/>
                <metric property="clusterwide-cache-loader-misses" description="The clusterwide number of cache loader misses. May return null if the cache is not started."/>
                <metric property="clusterwide-cache-loader-stores" description="The clusterwide number of cache loader put operations. May return null if the cache is not started."/>
                <metric property="clusterwide-evictions" description="The clusterwide number of cache eviction operations. May return null if the cache is not started."/>
                <metric property="clusterwide-hit-ratio" description="The clusterwide hit/miss ratio for the cache (hits/hits&#43;misses). May return null if the cache is not started."/>
                <metric property="clusterwide-hits" description="The clusterwide number of cache attribute hits. May return null if the cache is not started."/>
                <metric property="clusterwide-invalidations" description="The clusterwide number of cache invalidations. May return null if the cache is not started."/>
                <metric property="clusterwide-misses" description="The clusterwide number of cache attribute misses. May return null if the cache is not started."/>
                <metric property="clusterwide-number-of-entries" description="The clusterwide current number of entries in the cache. May return null if the cache is not started."/>
                <metric property="clusterwide-number-of-locks-available" description="The clusterwide number of locks available in this cache."/>
                <metric property="clusterwide-number-of-locks-held" description="The clusterwide number of locks currently in use by this cache."/>
                <metric property="clusterwide-passivations" dataType="trait" description="The clusterwide number of cache invalidations. May return null if the cache is not started."/>
                <metric property="clusterwide-read-write-ratio" description="The clusterwide read/write ratio of the cache ((hits&#43;misses)/stores). May return null if the cache is not started."/>
                <metric property="clusterwide-remove-hits" description="The clusterwide number of cache attribute remove hits. May return null if the cache is not started."/>
                <metric property="clusterwide-remove-misses" description="The clusterwide number of cache attribute remove misses. May return null if the cache is not started."/>
                <metric property="clusterwide-stores" description="The clusterwide number of cache attribute put operations. May return null if the cache is not started."/>
                <metric property="clusterwide-time-since-reset" description="Time (in secs) since cache statistics were reset. May return null if the cache is not started."/>
                <metric property="clusterwide-time-since-start" description="Time (in secs) since first cache node started. May return null if the cache is not started."/>
                <metric property="commits" description="The number of transaction commits. May return null if the cache is not started."/>
                <metric property="concurrency-level" description="The estimated number of concurrently updating threads which this cache can support. May return null if the cache is not started."/>
                <metric property="evictions" description="The number of cache eviction operations. May return null if the cache is not started."/>
                <metric property="hit-ratio" description="The hit/miss ratio for the cache (hits/hits&#43;misses). May return null if the cache is not started."/>
                <metric property="hits" description="The number of cache attribute hits. May return null if the cache is not started."/>
                <metric property="invalidations" description="The number of cache invalidations. May return null if the cache is not started."/>
                <metric property="misses" description="The number of cache attribute misses. May return null if the cache is not started."/>
                <metric property="number-of-entries" description="The current number of entries in the cache. May return null if the cache is not started."/>
                <metric property="number-of-locks-available" description="The number of locks available to this cache. May return null if the cache is not started."/>
                <metric property="number-of-locks-held" description="The number of locks currently in use by this cache. May return null if the cache is not started."/>
                <metric property="passivations" dataType="trait" description="The number of cache node passivations (passivating a node from memory to a cache store). May return null if the cache is not started."/>
                <metric property="prepares" description="The number of transaction prepares. May return null if the cache is not started."/>
                <metric property="read-write-ratio" description="The read/write ratio of the cache ((hits&#43;misses)/stores). May return null if the cache is not started."/>
                <metric property="remove-hits" description="The number of cache attribute remove hits. May return null if the cache is not started."/>
                <metric property="remove-misses" description="The number of cache attribute remove misses. May return null if the cache is not started."/>
                <metric property="replication-count" description="Number of successful replications"/>
                <metric property="replication-failures" description="Number of failed replications"/>
                <metric property="rollbacks" description="The number of transaction rollbacks. May return null if the cache is not started."/>
                <metric property="sites-mixed" description="List of site which are online and offline."/>
                <metric property="sites-offline" description="List of sites which are offline."/>
                <metric property="sites-online" description="List of sites which are online."/>
                <metric property="stores" description="The number of cache attribute put operations. May return null if the cache is not started."/>
                <metric property="success-ratio" description="Successful replications as a ratio of total replications in numeric double format"/>
                <metric property="time-since-reset" description="Time (in secs) since cache statistics were reset. May return null if the cache is not started."/>
                <metric property="time-since-start" description="Time (in secs) since cache started. May return null if the cache is not started."/>

                <resource-configuration>
                    <c:simple-property name="_flavor" displayName="Kind of cache" required="true" readOnly="true"
                                       default="local-cache" description="What kind of cache this is.">
                        <c:property-options>
                            <c:option value="local-cache"/>
                            <c:option value="invalidation-cache"/>
                            <c:option value="distributed-cache"/>
                            <c:option value="replicated-cache"/>
                        </c:property-options>
                    </c:simple-property>
                    <c:simple-property name="configuration" required="false" type="string" readOnly="false" description="The name of a cache configuration."/>


                    <c:group name="cluster-cache-attributes" displayName="Clustered Cache Attributes" hiddenByDefault="true">
                        <c:simple-property name="cache-availability" required="false" type="string" readOnly="false" description="The availability status of the cache."/>
                    </c:group>

                    <c:group name="distributed-cache-attributes" displayName="Distributed Cache Attributes" hiddenByDefault="true">
                        <c:simple-property name="cache-rebalance" required="false" type="boolean" readOnly="false" description="The cache rebalancing behavior."/>
                        <c:simple-property name="cache-rebalancing-status" required="true" type="string" readOnly="false" description="The cache rebalancing status."/>
                    </c:group>

                    <c:group name="backup-cache-attributes" displayName="Backup Cache Attributes" hiddenByDefault="true">
                        <c:list-property name="sites-mixed" required="true" description="List of site which are online and offline.">
                            <c:simple-property name="sites-mixed"/>
                        </c:list-property>
                        <c:list-property name="sites-offline" required="true" description="List of sites which are offline.">
                            <c:simple-property name="sites-offline"/>
                        </c:list-property>
                        <c:list-property name="sites-online" required="true" description="List of sites which are online.">
                            <c:simple-property name="sites-online"/>
                        </c:list-property>
                    </c:group>
                </resource-configuration>

                <service name="Backups" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="backup"/>
                    </plugin-configuration>
                    <operation name="bring-site-online" description="Re-enables a previously disabled backup site.">
                        <results>
                            <c:simple-property name="operationResult" description="Re-enables a previously disabled backup site."/>
                        </results>
                    </operation>
                    <operation name="cancel-push" description="Cancels the push state to remote site.">
                        <results>
                            <c:simple-property name="operationResult" description="Cancels the push state to remote site."/>
                        </results>
                    </operation>
                    <operation name="cancel-receive" description="Cancels the push state to this site.">
                        <results>
                            <c:simple-property name="operationResult" description="Cancels the push state to this site."/>
                        </results>
                    </operation>
                    <operation name="clear-push-state-status" description="Clears the push state status.">
                        <results>
                            <c:simple-property name="operationResult" description="Clears the push state status."/>
                        </results>
                    </operation>
                    <operation name="get-sending-site" description="Returns the site name from which this site is receiving state.">
                        <results>
                            <c:simple-property name="operationResult" description="Returns the site name from which this site is receiving state."/>
                        </results>
                    </operation>
                    <operation name="push-state" description="Pushes the state of this cache to the remote site.">
                        <results>
                            <c:simple-property name="operationResult" description="Pushes the state of this cache to the remote site."/>
                        </results>
                    </operation>
                    <operation name="push-state-status" description="Shows a map with destination site name and the push state status.">
                        <results>
                            <c:simple-property name="operationResult" description="Shows a map with destination site name and the push state status."/>
                        </results>
                    </operation>
                    <operation name="site-status" description="Displays the current status of the backup site.">
                        <results>
                            <c:simple-property name="operationResult" description="Displays the current status of the backup site."/>
                        </results>
                    </operation>
                    <operation name="take-site-offline" description="Disables backup to a remote site.">
                        <results>
                            <c:simple-property name="operationResult" description="Disables backup to a remote site."/>
                        </results>
                    </operation>
                </service><!-- End of backup service -->

                <service name="Transactions" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="transaction=TRANSACTION"/>
                    </plugin-configuration>
                    <operation name="force-commit-transaction" description="Forces the commit of an in-doubt transaction by its internal ID.">
                        <parameters>
                            <c:simple-property name="internal-id" required="false" type="long" readOnly="false" description="The internal ID of the transaction to force commit."/>
                        </parameters>
                        <results>
                            <c:simple-property name="operationResult" description="Forces the commit of an in-doubt transaction by its internal ID."/>
                        </results>
                    </operation>
                    <operation name="force-rollback-transaction" description="Forces the rollback of an in-doubt transaction by its internal ID.">
                        <parameters>
                            <c:simple-property name="internal-id" required="false" type="long" readOnly="false" description="The internal ID of the transaction to force rollback."/>
                        </parameters>
                        <results>
                            <c:simple-property name="operationResult" description="Forces the rollback of an in-doubt transaction by its internal ID."/>
                        </results>
                    </operation>
                    <operation name="forget-transaction" description="Removes recovery info for the given transaction by its internal ID.">
                        <parameters>
                            <c:simple-property name="internal-id" required="false" type="long" readOnly="false" description="The internal ID of the transaction to forget."/>
                        </parameters>
                        <results>
                            <c:simple-property name="operationResult" description="Removes recovery info for the given transaction by its internal ID."/>
                        </results>
                    </operation>
                    <operation name="list-in-doubt-transactions" description="Lists in-doubt transactions.">
                        <results>
                            <c:simple-property name="operationResult" description="Lists in-doubt transactions."/>
                        </results>
                    </operation>
                    <operation name="reset-transaction-statistics" description="Reset transaction statistics.">
                        <results>
                            <c:simple-property name="operationResult" description="Reset transaction statistics."/>
                        </results>
                    </operation>
                </service>
            </service>

            <service name="Configurations" discovery="SubsystemDiscovery" class="org.infinispan.server.rhq.CacheContainerConfigurationsComponent" singleton="true">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="configurations=CONFIGURATIONS"/>
                </plugin-configuration>
                <service name="Cache Configuration" discovery="SubsystemDiscovery" class="org.infinispan.server.rhq.CacheConfigurationComponent">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="distributed-cache-configuration|local-cache-configuration|invalidation-cache-configuration|replicated-cache-configuration"/>
                    </plugin-configuration>
                    <resource-configuration>
                        <c:simple-property name="_flavor" displayName="Kind of cache" required="true" readOnly="true"
                                           default="local-cache-configuration" description="What kind of cache configuration this is.">
                            <c:property-options>
                                <c:option value="local-cache-configuration"/>
                                <c:option value="invalidation-cache-configuration"/>
                                <c:option value="distributed-cache-configuration"/>
                                <c:option value="replicated-cache-configuration"/>
                            </c:property-options>
                        </c:simple-property>
                        <c:simple-property name="batching" required="false" type="boolean" readOnly="false" defaultValue="false" description="If enabled, the invocation batching API will be made available for this cache. The default value is false."/>
                        <c:simple-property name="capacity-factor" required="false" type="string" readOnly="false" defaultValue="1.0" description="Controls the proportion of entries that will reside on the local node, compared to the other nodes in the cluster. Value must be positive. This element is only used in 'distributed' cache instances. The default value is 1.0."/>
                        <c:simple-property name="configuration" required="false" type="string" readOnly="false" description="The name of a cache configuration."/>
                        <c:simple-property name="jndi-name" required="false" type="string" readOnly="false" description="The jndi-name to which to bind this cache instance."/>
                        <c:simple-property name="l1-lifespan" required="false" type="string" readOnly="false" defaultValue="0" description="Maximum lifespan of an entry placed in the L1 cache. This element configures the L1 cache behavior in 'distributed' caches instances. In any other cache modes, this element is ignored. The default value is 0."/>
                        <c:simple-property name="mode" required="false" type="string" readOnly="false" description="Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation."/>
                        <c:simple-property name="module" required="false" type="string" readOnly="false" description="The module whose class loader should be used when building this cache's configuration."/>
                        <c:simple-property name="owners" required="false" type="string" readOnly="false" defaultValue="2" description="Number of cluster-wide replicas for each cache entry. The default value is 2."/>
                        <c:simple-property name="remote-cache" required="false" type="string" readOnly="false" description="The name of the remote cache that backups data here."/>
                        <c:simple-property name="remote-site" required="false" type="string" readOnly="false" description="The name of the remote site containing the cache that backups data here."/>
                        <c:simple-property name="remote-timeout" required="false" type="string" readOnly="false" defaultValue="15000" description="In SYNC mode, the timeout (in ms) used to wait for an acknowledgment when making a remote call, after which the call is aborted and an exception is thrown. The default value is 15000."/>
                        <c:simple-property name="segments" required="false" type="string" readOnly="false" defaultValue="80" description="Controls the number of hash space segments which is the granularity for key distribution in the cluster. Value must be strictly positive. The default value is 80."/>
                        <c:simple-property name="simple-cache" required="false" type="boolean" readOnly="false" defaultValue="false" description="Use performance-optimized implementation that does support some feature (transactions, persistence, compatibility etc.). The default value is false."/>
                        <c:simple-property name="start" required="false" type="string" readOnly="false" defaultValue="EAGER" description="The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start). The default value is EAGER.">
                            <c:property-options>
                                <c:option value="EAGER" name="Start the caches immediately" />
                                <c:option value="LAZY" name="Start the caches when requested" />
                            </c:property-options>
                        </c:simple-property>
                        <c:simple-property name="statistics" required="false" type="boolean" readOnly="false" defaultValue="false" description="If enabled, statistics will be collected for this cache. The default value is false."/>
                        <c:simple-property name="statistics-available" required="false" type="boolean" readOnly="false" defaultValue="true" description="If set to false, statistics gathering cannot be enabled during runtime. Performance optimization. The default value is true."/>
                        <c:simple-property name="template" required="true" type="boolean" readOnly="false" defaultValue="true" description="Whether the configuration is a template or for a concrete cache. The default value is true."/>
                    </resource-configuration>
                    <service name="Backup" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="backup"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="after-failures" required="false" type="string" readOnly="false" defaultValue="0" description="The number of failed request operations after which this site should be taken offline. The default value is 0."/>
                            <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="If enabled, the cache will be backed-up to the remote site. The default value is true."/>
                            <c:simple-property name="failure-policy" required="false" type="string" readOnly="false" defaultValue="WARN" description="The failure policy to use for the cache backup. The default value is WARN.">
                                <c:property-options>
                                    <c:option value="IGNORE" name="Ignore backup failures" />
                                    <c:option value="WARN" name="Log a warning on backup failure" />
                                    <c:option value="FAIL" name="Fail on backup failure" />
                                    <c:option value="CUSTOM" name="Specify a custom policy to use on backup failure" />
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="min-wait" required="false" type="string" readOnly="false" defaultValue="0" description="The minimal number of millis to wait before taking this site offline, even in the case 'after-failures' is reached. The default value is 0."/>
                            <c:simple-property name="strategy" required="false" type="string" readOnly="false" defaultValue="ASYNC" description="The strategy to use for the cache backup. The default value is ASYNC.">
                                <c:property-options>
                                    <c:option value="SYNC" name="Synchronous strategy" />
                                    <c:option value="ASYNC" name="Asynchronous strategy" />
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="timeout" required="false" type="string" readOnly="false" defaultValue="10000" description="The time to wait for responses from the backup site. The default value is 10000."/>
                        </resource-configuration>
                        <service name="Backup State Transfer" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="state-transfer=STATE_TRANSFER"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="chunk-size" required="false" type="string" readOnly="false" defaultValue="512" description="The number of entries to batch to transfer. The default value is 512."/>
                                <c:simple-property name="max-retries" required="false" type="string" readOnly="false" defaultValue="30" description="The maximum number of retries. The default value is 30."/>
                                <c:simple-property name="timeout" required="false" type="string" readOnly="false" defaultValue="1200000" description="The timeout, in milliseconds, to wait from the remote site reply. The default value is 1200000."/>
                                <c:simple-property name="wait-time" required="false" type="string" readOnly="false" defaultValue="2000" description="The waiting time, in milliseconds, before retrying. The default value is 2000."/>
                            </resource-configuration>
                        </service>
                    </service><!-- End of backup service -->
                    <service name="Binary Keyed JDBC Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="binary-keyed-jdbc-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="binary-keyed-table" required="false" description="The database table used to store binary cache entries."/>
                            <c:simple-property name="datasource" required="true" type="string" readOnly="false" description="A datasource reference for this datastore."/>
                            <c:simple-property name="dialect" required="false" type="string" readOnly="false"
                                               description="The dialect of this datastore.">
                                <c:property-options>
                                    <c:option value="HSQL"/>
                                    <c:option value="INTERBASE"/>
                                    <c:option value="POSTGRES"/>
                                    <c:option value="DERBY"/>
                                    <c:option value="SQLITE"/>
                                    <c:option value="ACCESS"/>
                                    <c:option value="INFORMIX"/>
                                    <c:option value="DB2_390"/>
                                    <c:option value="SYBASE"/>
                                    <c:option value="H2"/>
                                    <c:option value="ORACLE"/>
                                    <c:option value="DB2"/>
                                    <c:option value="SQL_SERVER"/>
                                    <c:option value="MYSQL"/>
                                    <c:option value="FIREBIRD"/>
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                        </resource-configuration>
                        <service name="Binary Keyed JDBC Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="Binary Keyed JDBC Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of binary-keyed-jdbc-store service -->
                    <service name="Cluster Loader" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="cluster-loader"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="remote-timeout" required="false" type="long" readOnly="false" defaultValue="15000" description="In SYNC mode, the timeout (in ms) used to wait for an acknowledgment when making a remote call, after which the call is aborted and an exception is thrown. The default value is 15000."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                        </resource-configuration>
                        <service name="Cluster Loader Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                    </service><!-- End of cluster-loader service -->
                    <service name="Compatibility" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="compatibility"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enables compatibility mode for the cache. The default value is false."/>
                            <c:simple-property name="marshaller" required="false" type="string" readOnly="false" description="The marshaller to use for compatibility mode."/>
                        </resource-configuration>
                    </service><!-- End of compatibility service -->
                    <service name="Eviction" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="eviction=EVICTION"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="size" required="false" type="string" readOnly="false" defaultValue="-1" description="Sets the maximum size for the eviction type. The default value is -1."/>
                            <c:simple-property name="strategy" required="false" type="string" readOnly="false"
                                               defaultValue="NONE"
                                               description="Sets the cache eviction strategy. Available options are 'LRU', 'LIRS' and 'NONE' (to disable eviction). The default value is NONE.">
                                <c:property-options>
                                    <c:option value="NONE" name="None"/>
                                    <c:option value="LRU" name="Least Recently Used (LRU)"/>
                                    <c:option value="LIRS" name="Low Inter-Recency Set (LIRS)"/>
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="type" required="false" type="string" readOnly="false" defaultValue="COUNT" description="Specifies whether to use entry count or memory-based approximation. When using MEMORY, size will be the amount in bytes approximately that the data container will use in memory. The approximation is tailored for the HotSpot JVM. The default value is COUNT.">
                                <c:property-options>
                                    <c:option value="COUNT" name="Entries will be evicted when the number of entries exceeds the specified size"/>
                                    <c:option value="MEMORY" name="Entries will be evicted when the approximate combined size of all values exceeds the specified size"/>
                                </c:property-options>
                            </c:simple-property>
                        </resource-configuration>
                    </service>
                    <service name="Expiration" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="expiration=EXPIRATION"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="interval" required="false" type="string" readOnly="false" defaultValue="60000" description="Interval (in milliseconds) between subsequent runs to purge expired entries from memory and any cache stores. If you wish to disable the periodic eviction process altogether, set wakeupInterval to -1. The default value is 60000."/>
                            <c:simple-property name="lifespan" required="false" type="string" readOnly="false" defaultValue="-1" description="Maximum lifespan of a cache entry, after which the entry is expired cluster-wide, in milliseconds. -1 means the entries never expire. The default value is -1."/>
                            <c:simple-property name="max-idle" required="false" type="string" readOnly="false" defaultValue="-1" description="Maximum idle time a cache entry will be maintained in the cache, in milliseconds. If the idle time is exceeded, the entry will be expired cluster-wide. -1 means the entries never expire. The default value is -1."/>
                        </resource-configuration>
                    </service>
                    <service name="File Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="file-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="max-entries" required="false" type="string" readOnly="false" description="The maximum number of entries."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="path" required="false" type="string" readOnly="false" description="An absolute path if relativeTo is null, otherwise the relative path to relativeTo"/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:simple-property name="relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.data.dir" description="The path this is relative to. The default value is jboss.server.data.dir."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                        </resource-configuration>
                        <service name="File Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="File Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of file-store service -->
                    <service name="Indexing" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="indexing=INDEXING"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="auto-config" required="false" type="boolean" readOnly="false" defaultValue="false" description="If enabled, will configure indexing automatically based on cache type. The default value is false."/>
                            <c:list-property name="indexed-entities" required="false" description="The fully qualified names of the indexed entity classes.">
                                <c:simple-property name="indexed-entities"/>
                            </c:list-property>
                            <c:simple-property name="indexing" required="false" type="string" readOnly="false" defaultValue="NONE" description="The cache indexing configuration. The default value is NONE."/>
                            <c:simple-property name="indexing-properties" required="false" description="Properties to control indexing behaviour"/>
                        </resource-configuration>
                    </service>
                    <service name="LevelDB Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="leveldb-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="block-size" required="false" type="string" readOnly="false" defaultValue="0" description="The cache store block size. The default value is 0."/>
                            <c:simple-property name="cache-size" required="false" type="string" readOnly="false" defaultValue="0" description="Cache size for the cache store. The default value is 0."/>
                            <c:simple-property name="clear-threshold" required="false" type="string" readOnly="false" defaultValue="10000" description="Cache store cache clear threshold. The default value is 10000."/>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="path" required="false" type="string" readOnly="false" description="An absolute path if relativeTo is null, otherwise the relative path to relativeTo"/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                        </resource-configuration>
                        <service name="LevelDB Compression" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="compression=COMPRESSION"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="type" required="false" type="string" readOnly="false" defaultValue="NONE" description="Type of data compression to use in store. The default value is NONE.">
                                    <c:property-options>
                                        <c:option value="NONE" name="Do not compress data" />
                                        <c:option value="SNAPPY" name="Use Snappy compression" />
                                    </c:property-options>
                                </c:simple-property>
                            </resource-configuration>
                        </service>
                        <service name="LevelDB Expiration" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="expiration=EXPIRATION"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="path" required="false" type="string" readOnly="false" description="Path for cache store expiration data."/>
                                <c:simple-property name="queue-size" required="false" type="string" readOnly="false" defaultValue="10000" description="Leveldb store expiration queue size. The default value is 10000."/>
                            </resource-configuration>
                        </service>
                        <service name="LevelDB Implementation" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="implementation=IMPLEMENTATION"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="implementation" required="false" type="string" readOnly="false" defaultValue="AUTO" description="The LevelDB library implementation to use to store data. The default value is AUTO.">
                                    <c:property-options>
                                        <c:option value="AUTO" name="Select the best available implementation" />
                                        <c:option value="JAVA" name="Use the pure Java implementation" />
                                        <c:option value="JNI" name="Use the native implementation" />
                                    </c:property-options>
                                </c:simple-property>
                            </resource-configuration>
                        </service>
                        <service name="LevelDB Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="LevelDB Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of leveldb-store service -->
                    <service name="Loader" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="loader"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="class" required="true" type="string" readOnly="false" description="The custom loader implementation class to use for this cache loader."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                        </resource-configuration>
                        <service name="Loader Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                    </service><!-- End of loader service -->
                    <service name="Locking" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="locking=LOCKING"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="acquire-timeout" required="false" type="string" readOnly="false" defaultValue="10000" description="Maximum time to attempt a particular lock acquisition. The default value is 10000."/>
                            <c:simple-property name="concurrency-level" required="false" type="string" readOnly="false" defaultValue="32" description="The estimated number of concurrently updating threads which this cache can support. May return null if the cache is not started. The default value is 32."/>
                            <c:simple-property name="isolation" required="false" type="string" readOnly="false" defaultValue="READ_COMMITTED" description="Sets the cache locking isolation level. The default value is READ_COMMITTED.">
                                <c:property-options>
                                    <c:option value="NONE" name="None" />
                                    <c:option value="SERIALIZABLE" name="Serializable" />
                                    <c:option value="REPEATABLE_READ" name="Repeatable read"/>
                                    <c:option value="READ_COMMITTED" name="Read committed"/>
                                    <c:option value="READ_UNCOMMITTED" name="Read uncommitted"/>
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="striping" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, a pool of shared locks is maintained for all entries that need to be locked. Otherwise, a lock is created per entry in the cache. Lock striping helps control memory footprint but may reduce concurrency in the system. The default value is false."/>
                        </resource-configuration>
                    </service>
                    <service name="Mixed Keyed JDBC Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="mixed-keyed-jdbc-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="binary-keyed-table" required="false" description="The database table used to store binary cache entries."/>
                            <c:simple-property name="datasource" required="true" type="string" readOnly="false" description="A datasource reference for this datastore."/>
                            <c:simple-property name="dialect" required="false" type="string" readOnly="false"
                                               description="The dialect of this datastore.">
                                <c:property-options>
                                    <c:option value="HSQL"/>
                                    <c:option value="INTERBASE"/>
                                    <c:option value="POSTGRES"/>
                                    <c:option value="DERBY"/>
                                    <c:option value="SQLITE"/>
                                    <c:option value="ACCESS"/>
                                    <c:option value="INFORMIX"/>
                                    <c:option value="DB2_390"/>
                                    <c:option value="SYBASE"/>
                                    <c:option value="H2"/>
                                    <c:option value="ORACLE"/>
                                    <c:option value="DB2"/>
                                    <c:option value="SQL_SERVER"/>
                                    <c:option value="MYSQL"/>
                                    <c:option value="FIREBIRD"/>
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                            <c:simple-property name="string-keyed-table" required="false" description="The database table used to store cache entries."/>
                        </resource-configuration>
                        <service name="Mixed Keyed JDBC Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="Mixed Keyed JDBC Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of mixed-keyed-jdbc-store service -->
                    <service name="Partition Handling" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="partition-handling=PARTITION_HANDLING"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Configures the way this cache reacts to node crashes and split brains. The default value is true."/>
                        </resource-configuration>
                    </service>
                    <service name="Remote Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="remote-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="cache" required="false" type="string" readOnly="false" description="The name of the remote cache to use for this remote store."/>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="hotrod-wrapping" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enables wrapping of entries into a form usable by a HotRod server. The default value is false."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="protocol-version" required="false" type="string" readOnly="false" description="The protocol version to use for remote cache communication."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="raw-values" required="false" type="boolean" readOnly="false" defaultValue="false" description="Stores information on the remote cache in a raw format suitable for interoperability with other RemoteCacheManagers. The default value is false."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:list-property name="remote-servers" required="true" description="A list of remote servers for this cache store.">
                                <c:simple-property name="remote-servers"/>
                            </c:list-property>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                            <c:simple-property name="socket-timeout" required="false" type="string" readOnly="false" defaultValue="60000" description="A socket timeout for remote cache communication. The default value is 60000."/>
                            <c:simple-property name="tcp-no-delay" required="false" type="boolean" readOnly="false" defaultValue="true" description="A TCP_NODELAY value for remote cache communication. The default value is true."/>
                        </resource-configuration>
                        <service name="Remote Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="Remote Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of remote-store service -->
                    <service name="REST Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="rest-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="append-cache-name-to-path" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether to append the name of the cache to the path. The default value is false."/>
                            <c:simple-property name="connection-pool" required="false" description="The configuration of the HTTP connection pool"/>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="path" required="false" type="string" readOnly="false" defaultValue="/rest/___defaultcache" description="The path portion of the URI of the remote REST endpoint. The default value is /rest/___defaultcache."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:list-property name="remote-servers" required="true" description="A list of remote servers for this cache store.">
                                <c:simple-property name="remote-servers"/>
                            </c:list-property>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                        </resource-configuration>
                        <service name="REST Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="REST Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of rest-store service -->
                    <service name="Cache Security" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="security"/>
                        </plugin-configuration>
                        <service name="Cache Authorization" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="authorization"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enables authorization checks for a cache. The default value is true."/>
                                <c:list-property name="roles" required="false" description="The list of roles which are allowed to access a cache">
                                    <c:simple-property name="roles"/>
                                </c:list-property>
                            </resource-configuration>
                        </service><!-- End of authorization service -->
                    </service><!-- End of security service -->
                    <service name="State Transfer" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="state-transfer=STATE_TRANSFER"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="await-initial-transfer" required="false" type="boolean" readOnly="false" defaultValue="true" description="Wait for the initial state transfer to complete before making a cache available. The default value is true."/>
                            <c:simple-property name="chunk-size" required="false" type="string" readOnly="false" defaultValue="512" description="The size, in bytes, in which to batch the transfer of cache entries. The default value is 512."/>
                            <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="If enabled, this will cause the cache to ask neighboring caches for state when it starts up, so the cache starts 'warm', although it will impact startup time. The default value is true."/>
                            <c:simple-property name="timeout" required="false" type="string" readOnly="false" defaultValue="240000" description="The maximum amount of time (ms) to wait for state from neighboring caches, before throwing an exception and aborting startup. The default value is 240000."/>
                        </resource-configuration>
                    </service>
                    <service name="Cache Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="class" required="true" type="string" readOnly="false" description="The custom store implementation class to use for this cache store."/>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                        </resource-configuration>
                        <service name="Cache Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="Cache Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of store service -->
                    <service name="String Keyed JDBC Store" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="string-keyed-jdbc-store"/>
                        </plugin-configuration>
                        <operation name="reset-loader-statistics" description="Resets the cache loader statistics.">
                            <results>
                                <c:simple-property name="operationResult" description="Resets the cache loader statistics."/>
                            </results>
                        </operation>
                        <resource-configuration>
                            <c:simple-property name="datasource" required="true" type="string" readOnly="false" description="A datasource reference for this datastore."/>
                            <c:simple-property name="dialect" required="false" type="string" readOnly="false"
                                               description="The dialect of this datastore.">
                                <c:property-options>
                                    <c:option value="HSQL"/>
                                    <c:option value="INTERBASE"/>
                                    <c:option value="POSTGRES"/>
                                    <c:option value="DERBY"/>
                                    <c:option value="SQLITE"/>
                                    <c:option value="ACCESS"/>
                                    <c:option value="INFORMIX"/>
                                    <c:option value="DB2_390"/>
                                    <c:option value="SYBASE"/>
                                    <c:option value="H2"/>
                                    <c:option value="ORACLE"/>
                                    <c:option value="DB2"/>
                                    <c:option value="SQL_SERVER"/>
                                    <c:option value="MYSQL"/>
                                    <c:option value="FIREBIRD"/>
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="fetch-state" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled. The default value is true."/>
                            <c:simple-property name="passivation" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration. The default value is true."/>
                            <c:simple-property name="preload" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process. The default value is false."/>
                            <c:simple-property name="purge" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true, purges this cache store when it starts up. The default value is true."/>
                            <c:simple-property name="read-only" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the cache store will only be used to load entries. Any modifications made to the caches will not be applied to the store. The default value is false."/>
                            <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store. The default value is false."/>
                            <c:simple-property name="singleton" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store. The default value is false."/>
                            <c:simple-property name="string-keyed-table" required="false" description="The database table used to store cache entries."/>
                        </resource-configuration>
                        <service name="String Keyed JDBC Store Property" discovery="SubsystemDiscovery" class="BaseComponent">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="property"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of the cache store property."/>
                            </resource-configuration>
                        </service><!-- End of property service -->
                        <service name="String Keyed JDBC Store Write Behind" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                            <plugin-configuration>
                                <c:simple-property name="path" readOnly="true" default="write-behind=WRITE_BEHIND"/>
                            </plugin-configuration>
                            <resource-configuration>
                                <c:simple-property name="modification-queue-size" required="false" type="string" readOnly="false" defaultValue="1024" description="Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries. The default value is 1024."/>
                                <c:simple-property name="thread-pool-size" required="false" type="string" readOnly="false" defaultValue="1" description="Size of the thread pool whose threads are responsible for applying the modifications to the cache store. The default value is 1."/>
                            </resource-configuration>
                        </service><!-- End of write-behind service -->
                    </service><!-- End of string-keyed-jdbc-store service -->
                    <service name="Transaction" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="transaction=TRANSACTION"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="locking" required="false" type="string" readOnly="false" defaultValue="OPTIMISTIC" description="The locking configuration of the cache. The default value is OPTIMISTIC.">
                                <c:property-options>
                                    <c:option value="OPTIMISTIC" name="Use optimistic locking" />
                                    <c:option value="PESSIMISTIC" name="Use pessimistic locking" />
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="mode" required="false" type="string" readOnly="false" defaultValue="NONE" description="The transaction mode">
                                <c:property-options>
                                    <c:option value="NONE" name="Do not use transactions" />
                                    <c:option value="NON_XA" name="Use non-XA transactions" />
                                    <c:option value="NON_DURABLE_XA" name="Use non-durable XA transactions"/>
                                    <c:option value="FULL_XA" name="Use XA transaction with recovery"/>
                                </c:property-options>
                            </c:simple-property>
                            <c:simple-property name="notifications" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enables or disables triggering transactional notifications on cache listeners. The default value is true."/>
                            <c:simple-property name="stop-timeout" required="false" type="string" readOnly="false" defaultValue="30000" description="If there are any ongoing transactions when a cache is stopped, Infinispan waits for ongoing remote and local transactions to finish. The amount of time to wait for is defined by the cache stop timeout. The default value is 30000."/>
                        </resource-configuration>
                    </service>
                </service><!-- End of distributed-cache-configuration service -->
            </service>

            <service name="Global State" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="global-state=GLOBAL_STATE"/>
                </plugin-configuration>
                <resource-configuration>
                    <c:simple-property name="persistent-location" required="false" description="The filesystem location where persistent state data will be stored"/>
                    <c:simple-property name="temporary-location" required="false" description="The filesystem location where temporary data will be stored"/>
                </resource-configuration>
            </service>

            <service name="Thread Pool"
                     discovery="SubsystemDiscovery"
                     class="BaseComponent">

                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="thread-pool"/>
                </plugin-configuration>
                <resource-configuration>
                    <c:simple-property name="keepalive-time" required="false" type="string" readOnly="false" defaultValue="60000" description="Used to specify the amount of milliseconds that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down. The default value is 60000."/>
                    <c:simple-property name="max-threads" required="false" type="string" readOnly="false" defaultValue="25" description="The maximum thread pool size. The default value is 25."/>
                    <c:simple-property name="min-threads" required="false" type="string" readOnly="false" defaultValue="25" description="The core thread pool size which is smaller than the maximum pool size. If undefined, the core thread pool size is the same as the maximum thread pool size. The default value is 25."/>
                    <c:simple-property name="queue-length" required="false" type="string" readOnly="false" defaultValue="1000" description="The queue length. The default value is 1000."/>
                </resource-configuration>
            </service><!-- End of thread-pool service -->

            <service name="Cache Container Transport" discovery="SubsystemDiscovery"
                     class="BaseComponent" singleton="true"
                     description="The description of the transport used by this cache container">

                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="transport=TRANSPORT"/>
                </plugin-configuration>

                <resource-configuration>
                    <c:simple-property name="channel" required="false" type="string" readOnly="false" description="The channel of this cache container&apos;s transport."/>
                    <c:simple-property name="initial-cluster-size" required="false" type="string" readOnly="false" description="The number of nodes that have to be in the initial cluster before starting"/>
                    <c:simple-property name="initial-cluster-timeout" required="false" type="string" readOnly="false" description="The timeout for the initial cluster to form"/>
                    <c:simple-property name="lock-timeout" required="false" type="string" readOnly="false" defaultValue="240000"
                                       description="The timeout for locks for the transport. The default value is 240000."/>
                    <c:simple-property name="strict-peer-to-peer" required="false" type="boolean" readOnly="false" defaultValue="false"
                                       description="Makes clustered operations fail if the named cache does not exist on remote nodes. Only for replicated caches. The default value is false."/>
                </resource-configuration>
            </service>

        </service>
    </service>

    <service name="JGroups" discovery="SubsystemDiscovery" class="BaseComponent" singleton="true" description="The JGroups subsystem">
        <runs-inside>
            <parent-resource-type name="Profile" plugin="EAP7"/>
            <parent-resource-type name="EAP7 Standalone Server" plugin="EAP7"/>
            <parent-resource-type name="Managed Server" plugin="EAP7"/>
        </runs-inside>
        <plugin-configuration>
            <c:simple-property name="path" readOnly="true" default="subsystem=datagrid-jgroups"/>
            <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
        </plugin-configuration>
        <resource-configuration>
            <c:simple-property name="default-channel" required="false" type="string" readOnly="false" description="The default JGroups channel."/>
            <c:simple-property name="default-stack" required="false" type="string" readOnly="false" description="The default JGroups protocol stack."/>
        </resource-configuration>
        <service name="Channel" discovery="SubsystemDiscovery" class="BaseComponent">
            <plugin-configuration>
                <c:simple-property name="path" readOnly="true" default="channel"/>
            </plugin-configuration>
            <resource-configuration>
                <c:simple-property name="address" required="false" type="string" readOnly="true" description="The IP address of the channel."/>
                <c:simple-property name="address-as-uuid" required="false" type="string" readOnly="true" description="The address of the channel as a UUID."/>
                <c:simple-property name="discard-own-messages" required="false" type="boolean" readOnly="true" description="If true, do not receive messages sent by this node (ourself)."/>
                <c:simple-property name="module" required="false" type="string" readOnly="false" defaultValue="org.wildfly.clustering.server" description="The module from which to load channel services. The default value is org.wildfly.clustering.server."/>
                <c:simple-property name="num-tasks-in-timer" required="false" type="integer" readOnly="true" description="The current number of timer tasks."/>
                <c:simple-property name="num-timer-threads" required="false" type="integer" readOnly="true" description="The number of timer threads."/>
                <c:simple-property name="received-bytes" required="false" type="long" readOnly="true" description="The number of bytes received by this channel."/>
                <c:simple-property name="received-messages" required="false" type="long" readOnly="true" description="The number of messages received by this channel."/>
                <c:simple-property name="sent-bytes" required="false" type="long" readOnly="true" description="The number of bytes sent by this channel."/>
                <c:simple-property name="sent-messages" required="false" type="long" readOnly="true" description="The number of messages sent by this channel."/>
                <c:simple-property name="stack" required="false" type="string" readOnly="false" description="The protocol stack of the JGroups channel"/>
                <c:simple-property name="state" required="false" type="string" readOnly="true" description="The state of the channel (OPEN, CONNECTING, CONNECTED, CLOSED)."/>
                <c:simple-property name="stats-enabled" required="false" type="boolean" readOnly="true" description="If enabled, collect channel statistics."/>
                <c:simple-property name="version" required="false" type="string" readOnly="true" description="The JGroups software version."/>
                <c:simple-property name="view" required="false" type="string" readOnly="true" description="The channel's view of group membership."/>
            </resource-configuration>
            <service name="Fork" discovery="SubsystemDiscovery" class="BaseComponent">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="fork"/>
                </plugin-configuration>
                <service name="Fork Protocol" discovery="SubsystemDiscovery" class="BaseComponent">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="protocol"/>
                    </plugin-configuration>
                    <resource-configuration>
                        <c:simple-property name="module" required="false" type="string" readOnly="false" defaultValue="org.jgroups" description="The module with which to resolve the protocol type. The default value is org.jgroups."/>
                        <c:simple-property name="properties" required="false" description="The properties of this protocol."/>
                        <c:simple-property name="socket-binding" required="false" type="string" readOnly="false" description="The socket binding specification for this protocol layer, used to specify IP interfaces and ports for communication."/>
                        <c:simple-property name="type" required="false" type="string" readOnly="false" description="The implementation class for a protocol, which determines protocol functionality."/>
                    </resource-configuration>
                    <service name="Fork Protocol Property" discovery="SubsystemDiscovery" class="BaseComponent">
                        <plugin-configuration>
                            <c:simple-property name="path" readOnly="true" default="property"/>
                        </plugin-configuration>
                        <resource-configuration>
                            <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of a protocol property."/>
                        </resource-configuration>
                    </service><!-- End of property service -->
                </service><!-- End of protocol service -->
            </service><!-- End of fork service -->
        </service><!-- End of channel service -->
        <service name="Stack" discovery="SubsystemDiscovery" class="BaseComponent">
            <plugin-configuration>
                <c:simple-property name="path" readOnly="true" default="stack"/>
            </plugin-configuration>
            <operation name="add-protocol" description="Add the configuration of a protocol within a protocol stack.">
                <parameters>
                    <c:simple-property name="socket-binding" required="false" type="string" readOnly="false" description="The socket binding specification for this protocol layer, used to specify IP interfaces and ports for communication."/>
                    <c:simple-property name="type" required="false" type="string" readOnly="false" description="The implementation class for a protocol, which determines protocol functionality."/>
                    <c:simple-property name="properties" required="false" type="string" readOnly="false" defaultValue="[]" description="Optional LIST parameter specifying the protocol list for the stack. The default value is []."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Add the configuration of a protocol within a protocol stack."/>
                </results>
            </operation>
            <operation name="export-native-configuration" description="Export this stack configuration as a native JGroups format.">
                <results>
                    <c:simple-property name="operationResult" required="false" type="string" readOnly="false"/>  </results>
            </operation>
            <operation name="remove" description="Remove a protocol stack from the jgroups subsystem.">
                <results>
                    <c:simple-property name="operationResult" description="Remove a protocol stack from the jgroups subsystem."/>
                </results>
            </operation>
            <operation name="remove-protocol" description="Remove the configuration of a protocol within a protocol stack.">
                <parameters>
                    <c:simple-property name="type" required="false" type="string" readOnly="false" description="The implementation class for a protocol, which determines protocol functionality."/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult" description="Remove the configuration of a protocol within a protocol stack."/>
                </results>
            </operation>
            <service name="Protocol" discovery="SubsystemDiscovery" class="BaseComponent">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="protocol"/>
                </plugin-configuration>
                <resource-configuration>
                    <c:simple-property name="module" required="false" type="string" readOnly="false" defaultValue="org.jgroups" description="The module with which to resolve the protocol type. The default value is org.jgroups."/>
                    <c:simple-property name="properties" required="false" description="The properties of this protocol."/>
                    <c:simple-property name="socket-binding" required="false" type="string" readOnly="false" description="The socket binding specification for this protocol layer, used to specify IP interfaces and ports for communication."/>
                    <c:simple-property name="type" required="false" type="string" readOnly="false" description="The implementation class for a protocol, which determines protocol functionality."/>
                </resource-configuration>
                <service name="Protocol Property" discovery="SubsystemDiscovery" class="BaseComponent">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="property"/>
                    </plugin-configuration>
                    <resource-configuration>
                        <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of a protocol property."/>
                    </resource-configuration>
                </service><!-- End of property service -->
            </service><!-- End of protocol service -->
            <service name="Relay" discovery="SubsystemDiscovery" class="BaseComponent">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="relay"/>
                </plugin-configuration>
            </service><!-- End of relay service -->
            <service name="Sasl" discovery="SubsystemDiscovery" class="BaseComponent">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="sasl"/>
                </plugin-configuration>
            </service><!-- End of sasl service -->
            <service name="Cluster Transport" discovery="SubsystemDiscovery" class="BaseComponent">
                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="transport"/>
                </plugin-configuration>
                <resource-configuration>
                    <c:simple-property name="default-executor" required="false" type="string" readOnly="false" description="The thread pool executor to handle incoming messages."/>
                    <c:simple-property name="diagnostics-socket-binding" required="false" type="string" readOnly="false" description="The diagnostics socket binding specification for this protocol layer, used to specify IP interfaces and ports for communication."/>
                    <c:simple-property name="machine" required="false" type="string" readOnly="false" description="The machine (i.e. host) identifier for this node. Used by Infinispan topology-aware consistent hash."/>
                    <c:simple-property name="module" required="false" type="string" readOnly="false" defaultValue="org.jgroups" description="The module with which to resolve the protocol type. The default value is org.jgroups."/>
                    <c:simple-property name="oob-executor" required="false" type="string" readOnly="false" description="The thread pool executor to handle incoming out-of-band messages."/>
                    <c:simple-property name="properties" required="false" description="Optional LIST parameter specifying the property list for the transport."/>
                    <c:simple-property name="rack" required="false" type="string" readOnly="false" description="The rack (i.e. server rack) identifier for this node. Used by Infinispan topology-aware consistent hash."/>
                    <c:simple-property name="shared" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true, the underlying transport is shared by all channels using this stack. The default value is false."/>
                    <c:simple-property name="site" required="false" type="string" readOnly="false" description="The site (i.e. data centre) identifier for this node. Used by Infinispan topology-aware consistent hash."/>
                    <c:simple-property name="socket-binding" required="false" type="string" readOnly="false" description="The socket binding specification for this protocol layer, used to specify IP interfaces and ports for communication."/>
                    <c:simple-property name="thread-factory" required="false" type="string" readOnly="false" description="The thread factory to use for handling asynchronous transport-specific tasks."/>
                    <c:simple-property name="timer-executor" required="false" type="string" readOnly="false" description="The thread pool executor to handle protocol-related timing tasks."/>
                    <c:simple-property name="type" required="false" type="string" readOnly="false" description="The implementation class for a protocol, which determines protocol functionality."/>
                </resource-configuration>
                <service name="Transport Property" discovery="SubsystemDiscovery" class="BaseComponent">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="property"/>
                    </plugin-configuration>
                    <resource-configuration>
                        <c:simple-property name="value" required="true" type="string" readOnly="false" description="The value of a protocol property."/>
                    </resource-configuration>
                </service><!-- End of property service -->
                <service name="JGroups Thread Pool" discovery="SubsystemDiscovery" class="BaseComponent">
                    <plugin-configuration>
                        <c:simple-property name="path" readOnly="true" default="thread-pool"/>
                    </plugin-configuration>
                    <resource-configuration>
                        <c:simple-property name="keepalive-time" required="false" type="string" readOnly="false" defaultValue="60" description="Used to specify the amount of milliseconds that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down. The default value is 60."/>
                        <c:simple-property name="max-threads" required="false" type="string" readOnly="false" defaultValue="200" description="The maximum thread pool size. The default value is 200."/>
                        <c:simple-property name="min-threads" required="false" type="string" readOnly="false" defaultValue="20" description="The core thread pool size which is smaller than the maximum pool size. If undefined, the core thread pool size is the same as the maximum thread pool size. The default value is 20."/>
                        <c:simple-property name="queue-length" required="false" type="string" readOnly="false" defaultValue="0" description="The queue length. The default value is 0."/>
                    </resource-configuration>
                </service><!-- End of thread-pool service -->
            </service><!-- End of transport service -->
        </service><!-- End of stack service -->
    </service>

</plugin>
